{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chronometer/chronometer.component.ts","webpack:///src/app/components/chronometer/chronometer.component.html","webpack:///src/app/components/emon/emon.component.html","webpack:///src/app/components/emon/emon.component.ts","webpack:///src/app/components/nav/nav.component.ts","webpack:///src/app/components/nav/nav.component.html","webpack:///src/app/components/timer/timer.component.ts","webpack:///src/app/components/timer/timer.component.html","webpack:///src/app/models/setTimeEMON/setDisplay.ts","webpack:///src/app/models/setTimeEMON/setTime.ts","webpack:///src/app/models/setTimeTimer/setDisplay.ts","webpack:///src/app/models/setTimeTimer/setTime.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChronometerComponent","displayDay","displayHour","displayMin","displaySec","displayMil","day","hour","minute","second","milisecond","interval","clickedPlay","clickedPause","clickedInterval","buttonPlay","ordenInterval","time","timeText","toString","display","length","count","isPaused","console","log","chrono","setInterval","convert","clearInterval","timeDisplay","data","orden","push","start","pause","getInterval","stop","EmonComponent","formBuilder","checkoutForm","group","reps","a","b","seconds","minutes","join","i","num","value","Array","apply","NavComponent","active","TimerComponent","autoTicks","disabled","invert","max","maxHours","min","showTicks","step","thumbLabel","vertical","tickInterval","set","dFinish","hours","match","reset","Display","Time","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChronometerComponent } from './components/chronometer/chronometer.component'\nimport { TimerComponent } from './components/timer/timer.component';\nimport { EmonComponent } from './components/emon/emon.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChronometerComponent\n  },{\n    path: 'chronos',\n    component: ChronometerComponent\n  },{\n    path: 'timer',\n    component: TimerComponent\n  },{\n    path: 'emon',\n    component: EmonComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crossTimer';\n}\n","<app-nav></app-nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NavComponent } from './components/nav/nav.component';\nimport { ChronometerComponent } from './components/chronometer/chronometer.component';\nimport { TimerComponent } from './components/timer/timer.component';\nimport { EmonComponent } from './components/emon/emon.component';\n\n\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    ChronometerComponent,\n    TimerComponent,\n    EmonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatListModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatGridListModule,\n    MatCardModule,\n    MatInputModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent,\n    NavComponent\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chronometer',\n  templateUrl: './chronometer.component.html',\n  styleUrls: ['./chronometer.component.css']\n})\nexport class ChronometerComponent implements OnInit {\n\n  displayDay :string = \"00\";\n  displayHour :string = \"00\";\n  displayMin :string = \"00\";\n  displaySec :string = \"00\";\n  displayMil :string = \"00\";\n  day :number = 0;\n  hour: number = 0;\n  minute: number = 0;\n  second: number = 0;\n  milisecond: number = 0;\n  interval = [];\n  chrono;\n  clickedPlay:boolean = false;\n  clickedPause:boolean = true;\n  clickedInterval:boolean = true;\n  isPaused:boolean;\n  count;\n  buttonPlay = 'Empezar';\n  ordenInterval:number = 0;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  convert(time){\n    let timeText = time.toString();\n\n    let display = '00';\n\n    if(timeText.length > 1){\n\n      return timeText\n    } else if(timeText.length == 1){\n      return \"0\" + timeText;\n    }\n  }\n\n  start(){\n    this.count = 0;\n    this.isPaused = false;\n\nconsole.log(this.second);\n    this.chrono = setInterval(()=>{\n      this.milisecond +=1;\n      this.displayMil = this.convert(this.milisecond);\n      if (this.milisecond == 100) {\n        this.milisecond = 0;\n        this.displayMil = '00';\n        this.second += 1;\n        //console.log(this.second);\n\n        this.displaySec = this.convert(this.second);\n        if (this.second == 60) {\n          this.second = 0;\n          this.displaySec = '00';\n          this.minute += 1;\n          this.displayMin = this.convert(this.minute);\n          if (this.minute == 60) {\n            this.minute = 0;\n            this.displayMin = '00';\n            this.hour =+ 1;\n            this.displayHour = this.convert(this.hour);\n            if (this.hour == 24) {\n              this.hour = 0;\n              this.displayHour = '00';\n              this.day =+ 1;\n              this.displayDay = this.convert(this.day);\n            }\n          }\n        }\n      }\n\n    },10)\n  }\n\n  pause(){\n    this.buttonPlay = 'Continuar';\n    clearInterval(this.chrono)\n  }\n\n  getInterval(){\n    this.ordenInterval += 1;\n    this.count += 1;\n    let timeDisplay;\n    if (this.displayHour == '00' && this.displayDay == '00') {\n      timeDisplay = this.displayMin + ':' + this.displaySec + ':' + this.displayMil\n    } else if(this.displayHour != '00' && this.displayDay == '00'){\n      timeDisplay = this.displayHour + ':' + this.displayMin + ':' + this.displaySec + ':' + this.displayMil\n    } else {\n      timeDisplay = this.displayDay + ':' + this.displayHour + ':' + this.displayMin + ':' + this.displaySec + ':' + this.displayMil\n    }\n    let data = {\n      orden: this.ordenInterval + 'º -\\ ',\n      data: timeDisplay\n    }\n    console.log(data)\n    //let data = this.displayDay + ':' + this.displayHour + ':' + this.displayMin + ':' + this.displaySec + ':' + this.displayMil;\n    if (this.isPaused === true && this.count > 0) {\n      this.clickedInterval = true;\n    }\n    this.interval.push(data);\n\n  }\n\n  stop(){\n    clearInterval(this.chrono);\n    this.displayDay = \"00\";\n    this.displayHour = \"00\";\n    this.displayMin = \"00\";\n    this.displaySec = \"00\";\n    this.displayMil = \"00\";\n    this.day = 0;\n    this.hour = 0;\n    this.minute = 0;\n    this.second = 0;\n    this.milisecond = 0;\n    this.interval = [];\n    this.chrono;\n    this.clickedPlay = false;\n    this.clickedPause = true;\n    this.clickedInterval = true;\n    this.isPaused = true;\n    this.count = 0;\n    this.buttonPlay = 'Empezar';\n    this.ordenInterval = 0;\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-lg-8 offset-lg-2\">\n\n    <div class=\"jumbotron\">\n      <h1 class=\"display-4\">Cronometro</h1>\n      <hr class=\"my-4\">\n      <div id=\"display\" class=\"col-md-12\">\n          <span *ngIf=\"day != 0\">{{displayDay}}:</span>\n          <span *ngIf=\"hour != 0\">{{displayHour}}:</span>\n          <span>{{displayMin}}:</span>\n          <span>{{displaySec}}:</span>\n          <span class=\"milisecond\">{{displayMil}}</span>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <mat-list>\n                <mat-list-item *ngFor=\"let time of interval\">\n                  <div>{{time.orden}}</div>\n                  <div>{{time.data}}</div>\n                </mat-list-item>\n              </mat-list>\n            </div>\n          </div>\n      </div>\n      <hr class=\"my-4\">\n      <div class=\"row\">\n        <div class=\"col-sm-3 center\">\n          <button mat-raised-button\n          color=\"primary\"\n          [disabled]=\"clickedPlay\"\n          (click)=\"start();\n          clickedPlay=true;\n          clickedPause=false;\n          clickedInterval=false\">\n            {{buttonPlay}}\n          </button>\n        </div>\n        <div class=\"col-sm-3 center\">\n          <button mat-raised-button\n          color=\"accent\"\n          [disabled]=\"clickedPause\"\n          (click)=\"pause(); clickedPlay=false; clickedPause=true; isPaused=true\">\n            Pause\n          </button>\n        </div>\n        <div class=\"col-sm-3 center\">\n          <button mat-raised-button\n          color=\"accent\"\n          [disabled]=\"clickedInterval\"\n          (click)=\"getInterval();\">\n            Intervalo\n          </button>\n        </div>\n        <div class=\"col-sm-3 center\">\n          <button mat-raised-button color=\"warn\" (click)=\"stop()\">Reiniciar</button>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n","<div class=\"row\">\n  <div class=\"col-lg-4\">\n    <mat-card class=\"main\">\n      <mat-card-header>\n        <mat-card-title>Configuración</mat-card-title>\n        <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n      </mat-card-header>\n      <hr class=\"my-4-fix-top\">\n      <mat-card-content>\n        <form [formGroup]=\"checkoutForm\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Rondas</mat-label>\n            <input matInput formControlName=\"reps\" type=\"number\" placeholder=\"0\">\n          </mat-form-field>\n        </form>\n      </mat-card-content>\n      <hr class=\"my-4-fix-bottom\">\n      <mat-card-actions>\n        <button mat-button (click)=\"apply()\">Aplicar</button>\n        <button mat-button>Resetear</button>\n      </mat-card-actions>\n\n    </mat-card>\n  </div>\n\n  <div class=\"col-lg-8\">\n    <mat-card class=\"main\">\n      <mat-card-header>\n        <mat-card-title>{{ title }}</mat-card-title>\n      </mat-card-header>\n      <hr class=\"my-4-fix-top\">\n      <mat-card-content>\n        <div class=\"display\">\n          {{ display.minutes }}:{{ display.seconds }}\n        </div>\n        <table *ngIf=\"reps\" class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th *ngFor=\"let col of reps\">First</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td *ngFor=\"let col of reps\">First</td>\n            </tr>\n          </tbody>\n        </table>\n      </mat-card-content>\n      <hr class=\"my-4-fix-bottom\">\n      <mat-card-actions>\n        <button mat-button (click)=\"start();\">Inicio</button>\n        <button mat-button>Pausa</button>\n        <button mat-button>Reinicio</button>\n      </mat-card-actions>\n    </mat-card>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Display } from '../../models/setTimeEMON/setDisplay';\nimport { Time } from '../../models/setTimeEMON/setTime';\n\n@Component({\n  selector: 'app-emon',\n  templateUrl: './emon.component.html',\n  styleUrls: ['./emon.component.css']\n})\nexport class EmonComponent implements OnInit {\n  title:string = \"EMON\";\n  display: Display;\n  time: Time;\n  reps;\n  checkoutForm;\n  chrono;\n  count = 0;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    this.display = new Display('00','01');\n    this.time = new Time(0,1);\n    this.checkoutForm = this.formBuilder.group({\n      reps: 0\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  interval(){\n    return new Promise(a =>{\n      let b = setInterval(()=>{\n        if (--this.time.seconds < 0) {\n          this.time.minutes = 0;\n          this.display.minutes = '0';\n          this.time.seconds = 59;\n        }\n        this.display.seconds = this.join(this.time.seconds);\n        console.log(this.time.seconds);\n        console.log(this.time.minutes);\n        if (this.time.seconds === 0) {\n          clearInterval(b)\n        }\n      },1000);\n\n    })\n\n  }\n\n\n\n  async start(){\n    this.display.minutes = '0';\n    this.display.seconds = '10';\n    this.time.minutes = 0;\n    this.time.seconds = 10;\n\n    for (let i = 0; i < this.reps.length; i++) {\n      await this.interval();\n      console.log(i + ' <-> ' + this.reps.length);\n    }\n  }\n\n  apply(){\n    //console.log(this.checkoutForm.value.reps);\n    let num = this.checkoutForm.value.reps;\n    this.reps = new Array(num);\n\n  }\n\n  join(a){\n    if (a.toString().length == 1) {\n      return '0' + a;\n    } else if(a.toString().length > 1) {\n      return a;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  title = 'CrossTimer';\n  active = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">{{ title }}</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbar\">\n\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/chronos\" routerLinkActive=\"active\">Cronometro</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/timer\" routerLinkActive=\"active\">Temporizador</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/emon\" routerLinkActive=\"active\">EMOM</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n</nav>\n\n\n<!--nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">{{ title }}</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/chronos\" routerLinkActive=\"active\">Cronometro</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/timer\">Temporizador</a>\n\n\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">AMRAP</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">EMOM</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav-->\n","import { Component, OnInit } from '@angular/core';\n\nimport { Time } from '../../models/setTimeTimer/setTime';\nimport { Display } from '../../models/setTimeTimer/setDisplay';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n  time: Time;\n  set: Time;\n  display: Display;\n  buttonPlay = 'Iniciar';\n  clickedPlay: Boolean = false;\n  clickedPause: Boolean = true;\n  chrono;\n  dFinish;\n  animal: string;\n  name: string;\n  autoTicks = false;\n  disabled = false;\n  invert = false;\n  max = 59;\n  maxHours = 24;\n  min = 0;\n  showTicks = false;\n  step = 1;\n  thumbLabel = true;\n  vertical = false;\n  tickInterval = 1;\n  num: number = 10;\n\n\n  constructor(\n\n  ) {\n    this.set = new Time(0,0,0);\n    this.time = new Time(0,0,0);\n    this.display = new Display('00','00','00');\n  }\n\n  ngOnInit(): void {\n  }\n\n  join(a){\n    if (a.toString().length == 1) {\n      return '0' + a;\n    } else if(a.toString().length > 1) {\n      return a;\n    }\n  }\n\n  start(){\n    this.dFinish = null;\n    if(this.time.seconds == 0 && this.time.minutes == 0 && this.time.hours == 0){\n      return console.log(this.time);\n    }\n\n    this.chrono = setInterval(()=>{\n      console.log(this.set)\n      if (--this.time.seconds < 0) {\n        this.time.seconds = 59;\n        this.display.seconds = '59'\n        if (--this.time.minutes < 0) {\n          this.time.minutes = 59;\n          this.display.minutes = '59'\n          if (--this.time.hours < 0) {\n            this.dFinish = \"Terminado\"\n            this.display.seconds = this.join(this.set.seconds);\n            this.display.minutes = this.join(this.set.minutes);\n            this.display.hours = this.join(this.set.hours);\n            clearInterval(this.chrono)\n          }\n        }\n      }\n\n    },1000);\n  };\n\n  match(){\n    this.set = this.time\n    this.display.seconds = this.join(this.time.seconds);\n    this.display.minutes = this.join(this.time.minutes);\n    this.display.hours = this.join(this.time.hours);\n  }\n\n  pause(){\n    this.buttonPlay = 'Continuar';\n    clearInterval(this.chrono)\n  }\n\n  reset(){\n    this.buttonPlay = 'Empezar';\n    this.time = new Time(5,0,0);\n    this.display = new Display('05','00','00');\n    clearInterval(this.chrono)\n  }\n\n  getSliderTickInterval(): number | 'auto' {\n    if (this.showTicks) {\n      this.match();\n      return this.autoTicks ? 'auto' : this.tickInterval;\n    }\n    this.match();\n    return 0;\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-lg-12\">\n\n    <mat-card class=\"main\">\n      <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-title>Timer</mat-card-title>\n        <!--mat-card-subtitle>Dog Breed</mat-card-subtitle-->\n      </mat-card-header>\n      <hr class=\"my-4\">\n      <mat-card-content class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-xl-3\">\n            <div class=\"col-xl-12\">\n              <div id=\"setTime\">\n                <h5>{{time.seconds}} Segundos</h5>\n                <!--mat-form-field class=\"example-full-width\">\n                  <mat-label>Seconds</mat-label>\n                  <input matInput type=\"number\" [(ngModel)]=\"time.seconds\" placeholder=\"Máximo 59 segundos\">\n                </mat-form-field-->\n                <mat-slider\n                  [disabled]=\"disabled\"\n                  [invert]=\"invert\"\n                  [max]=\"max\"\n                  [min]=\"min\"\n                  [step]=\"step\"\n                  [thumbLabel]=\"thumbLabel\"\n                  [tickInterval]=\"getSliderTickInterval()\"\n                  [(ngModel)]=\"time.seconds\"\n                  [vertical]=\"vertical\">\n                </mat-slider>\n              </div>\n            </div>\n            <hr class=\"my-4\">\n            <div class=\"col-xl-12\">\n              <div id=\"setTime\">\n                <h5>{{time.minutes}} Minutos</h5>\n                <mat-slider\n                  [disabled]=\"disabled\"\n                  [invert]=\"invert\"\n                  [max]=\"max\"\n                  [min]=\"min\"\n                  [step]=\"step\"\n                  [thumbLabel]=\"thumbLabel\"\n                  [tickInterval]=\"getSliderTickInterval()\"\n                  [(ngModel)]=\"time.minutes\"\n                  [vertical]=\"vertical\">\n                </mat-slider>\n              </div>\n            </div>\n            <hr class=\"my-4\">\n            <div class=\"col-xl-12\">\n              <div id=\"setTime\">\n                <h5>{{time.hours}} Horas</h5>\n                <mat-slider\n                  [disabled]=\"disabled\"\n                  [invert]=\"invert\"\n                  [max]=\"maxHours\"\n                  [min]=\"min\"\n                  [step]=\"step\"\n                  [thumbLabel]=\"thumbLabel\"\n                  [tickInterval]=\"getSliderTickInterval()\"\n                  [(ngModel)]=\"time.hours\"\n                  [vertical]=\"vertical\">\n                </mat-slider>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-9\">\n            <div class=\"display col-md-12\">\n\n              <span *ngIf=\"time.hours != 0\">{{display.hours}}:</span>\n              <span>{{display.minutes}}:</span>\n              <span>{{display.seconds}}</span>\n              <h4>{{dFinish}}</h4>\n            </div>\n          </div>\n        </div>\n        <hr class=\"my-4\">\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-raised-button\n        color=\"primary\"\n        [disabled]=\"clickedPlay\"\n        (click)=\"start(); clickedPlay = true; clickedPause = false;\">\n          {{buttonPlay}}\n        </button>\n\n        <button mat-raised-button\n        color=\"accent\"\n        [disabled]=\"clickedPause\"\n        (click)=\"pause(); clickedPlay=false; clickedPause = true;\">\n          Pause\n        </button>\n\n        <button mat-raised-button\n        color=\"accent\"\n        (click)=\"reset(); clickedPlay=false; clickedPause = true;\">\n          Restablecer\n        </button>\n        <!--button mat-button>LIKE</button>\n        <button mat-button>SHARE</button-->\n      </mat-card-actions>\n    </mat-card>\n\n\n  </div>\n</div>\n\n<!--[(ngModel)]=\"time.seconds\"-->\n","export class Display{\n  constructor(\n    public seconds: string,\n    public minutes: string\n  ){}\n}\n","export class Time{\n  constructor(\n    public seconds: number,\n    public minutes: number\n  ){}\n}\n","export class Display{\n  constructor(\n    public seconds: string,\n    public minutes: string,\n    public hours: string\n  ){}\n}\n","export class Time{\n  constructor(\n    public seconds: number,\n    public minutes: number,\n    public hours: number\n  ){}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}